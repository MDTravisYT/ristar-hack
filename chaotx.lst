00000000                            ;	TO ADD CODE:	4E F9 (ADDRESS LONGWORD)
00000000                            
00000000                            align    macro
00000000                                cnop 0,\1
00000000                                endm
00000000                            
00000000                            		incbin     "ristar.j - Copy.bin"	;	Include hex edited Ristar ROM
00200000                            											;		to jump to custom code
00200000                            											
00200000                            ;	============================================================================!
00200000                            		align		$200000				 ;	SHC SPLASH							!
00200000                            ;	============================================================================!
00200000                            											
00200000                            CustomGameMode:				             ;	
00200000 4EB9 0000 0000             		jsr	SHC				             ;	Play SHC screen
00200006 33FC 0000 00FF EA00        		move.w	#0,	$FFEA00				 ;	Move 0 to game mode RAM (i moved the level mode here)
0020000E 4EF9 0000 789E             		jmp	$789E				           ;	Jump to level code
00200014                            											
00200014                            SHC:	incbin	"SHC_Advanced.bin"          ;	SHC screen include
00205AFE                            
00205AFE                            ;	============================================================================!
00205AFE                            		align		$210000				 ;	CHUNK LOADING						!
00210000                            ;	============================================================================!        
00210000                            
00210000 =00163716                  ChunkPointers	=	$163716
00210000 =00004C3E                  stardec	=	$4C3E
00210000 =000049A8                  nemdec			=	$49A8
00210000 =00004996                  nemdec_vram		=	$4996
00210000                            
00210000                            sub_87EA:				               ; CODE XREF: sub_7B32+492↑p
00210000                            
00210000                            		;		move.b  $FFE500,d0		;	level art
00210000                            		;		jsr     $13B06
00210000                            				
00210000 1039 00FF E500             				move.b  $FFE500,d0		;	level palette
00210006 4EB9 0001 3D0E             				jsr     $13D0E
0021000C 43F9 0016 3716             				lea     (ChunkPointers).l,a1
00210012 7000                       				moveq   #0,d0
00210014 1039 00FF E500             				move.b  $FFE500,d0
0021001A D040                       				add.w   d0,d0
0021001C D040                       				add.w   d0,d0
0021001E 2071 0000                  				movea.l (a1,d0.w),a0
00210022 49F9 00FF 0000             				lea     $FF0000.l,a4
00210028 4EB9 0000 49A8             				jsr     (nemdec).l
0021002E 43F9 0018 8492             				lea     ($188492).l,a1
00210034 7000                       				moveq   #0,d0
00210036 1039 00FF E500             				move.b  $FFE500,d0
0021003C D040                       				add.w   d0,d0
0021003E D040                       				add.w   d0,d0
00210040 2271 0000                  				movea.l (a1,d0.w),a1
00210044 45F9 00FF A400             				lea     $FFA400,a2
0021004A 4EB9 0001 3DB6             				jsr     $13DB6
00210050 4EB9 0001 3A0E             				jsr     $13A0E
00210056 41F9 0000 0000             				lea		ArtMZ,	a0
0021005C 23FC 6400 0000 00C0 0004   				move.l  #$64000000,($C00004).l
00210066 4EB9 0000 4996             				jsr     (nemdec_vram).l
0021006C 1039 00FF E500             				move.b  $FFE500,d0		;	level display?
00210072 4EB9 0000 0000             				jsr     sub_13A68
00210078 4EF9 0001 3A2E             				jmp     $13A2E
0021007E                            ; End of function sub_87EA
0021007E                            
0021007E                            
0021007E                            ; =============== S U B R O U T I N E =======================================
0021007E                            
0021007E                            
0021007E                            sub_8852:				               ; CODE XREF: sub_7B32+104↑p
0021007E 1039 00FF E500             				move.b  $FFE500,d0
00210084 4EB9 0001 3A98             				jsr     $13A98
0021008A 1039 00FF E500             				move.b  $FFE500,d0
00210090 4EB9 0001 3CC4             				jsr     $13CC4
00210096 1039 00FF E500             				move.b  $FFE500,d0
0021009C                            
0021009C 43F9 0018 53B0             				lea     ($1853B0).l,a1
002100A2                            loc_886A:				               ; CODE XREF: sub_EEA6+CC↓p
002100A2 7000                       				moveq   #0,d0
002100A4 1039 00FF E500             				move.b  $FFE500,d0
002100AA D040                       				add.w   d0,d0
002100AC D040                       				add.w   d0,d0
002100AE 2071 0000                  				movea.l (a1,d0.w),a0
002100B2 43F9 00FF 4000             				lea     ($FF4000).l,a1
002100B8 4EB9 0000 4C3E             				jsr     (stardec).l
002100BE 41F9 00FF 4000             				lea     ($FF4000).l,a0
002100C4 43F9 00FF AA00             				lea     ($FFAA00).l,a1
002100CA 3E3C 00FF                  				move.w  #$FF,d7
002100CE                            
002100CE                            loc_889A:				               ; CODE XREF: sub_8852+4A↓j
002100CE 22D8                       				move.l  (a0)+,(a1)+
002100D0 51CF FFFC                  				dbf     d7,loc_889A
002100D4 43F9 0018 8552             				lea     ($188552).l,a1
002100DA 7000                       				moveq   #0,d0
002100DC 1039 00FF E500             				move.b  $FFE500,d0
002100E2 D040                       				add.w   d0,d0
002100E4 D040                       				add.w   d0,d0
002100E6 2271 0000                  				movea.l (a1,d0.w),a1
002100EA 45F9 00FF A600             				lea     $FFA600,a2
002100F0 4EB9 0001 3DB6             				jsr     $13DB6
002100F6 4E75                       				rts
002100F8                            				
002100F8                            ;	============================================================================!
002100F8                            		align		$212000				 ;	BLOCK LOADING						!
00212000                            ;	============================================================================!
00212000                            		
00212000 =0011C764                  BlockPointers	=	$11C764
00212000                            
00212000                            sub_13A68:				              ; CODE XREF: sub_87EA+4↑p
00212000 7000                       				moveq   #0,d0
00212002 1039 00FF E500             				move.b  $FFE500,d0
00212008 41F9 0011 C764             				lea     (BlockPointers).l,a0
0021200E D040                       				add.w   d0,d0
00212010 D040                       				add.w   d0,d0
00212012 D040                       				add.w   d0,d0
00212014 3E30 0004                  				move.w  4(a0,d0.w),d7
00212018 2070 0000                  				movea.l (a0,d0.w),a0
0021201C 49F9 00FF 8008             				lea     $FF8008,a4
00212022 4A39 00FF E501             				tst.b   $FFE501
00212028 6600                       				bne.s   loc_13A90
0021202A 49F9 00FF 8000             				lea     $FF8000,a4
00212030                            
00212030                            loc_13A90:				              ; CODE XREF: sub_13A68+22↑j
00212030 303C 0120                  				move.w  #$120,d0
00212034                            			;	bra.w   loc_13F9C
00212034                            loc_13F9C:				              ; CODE XREF: sub_13A68+2C↑j
00212034                            								        ; sub_13A98+3E↑j
00212034 48E7 81C0                  				movem.l d0/d7-a1,-(sp)
00212038 4EB9 0000 49A8             				jsr     (nemdec).l
0021203E 4CDF 0381                  				movem.l (sp)+,d0/d7-a1
00212042                            
00212042                            loc_13FAA:				              ; CODE XREF: sub_13A68+548↓j
00212042 3214                       				move.w  (a4),d1
00212044 D240                       				add.w   d0,d1
00212046 38C1                       				move.w  d1,(a4)+
00212048 51CF FFF8                  				dbf     d7,loc_13FAA
0021204C 4E75                       				rts
0021204E                            				
0021204E                            ;	============================================================================!
0021204E                            		align		$220000				 ;	CHUNK DATA							!
00220000                            ;	============================================================================!  
00220000                            		
00220000                            		incbin	"SonLVL/chunks.nem"
002232CA                            		
002232CA                            ;	============================================================================!
002232CA                            		align		$228000				 ;	BLOCK DATA							!
00228000                            ;	============================================================================!  
00228000                            
00228000                            		incbin	"SonLVL/blocks.nem"
002287FC                            ArtMZ:	incbin	"SonLVL/ArtMZ.bin"
