00000000                            ;	TO ADD CODE:	4E F9 (ADDRESS LONGWORD)
00000000                            
00000000                            align    macro
00000000                                cnop 0,\1
00000000                                endm
00000000                            
00000000                            		incbin     "ristar.j - Copy.bin"	;	Include hex edited Ristar ROM
00200000                            											;		to jump to custom code
00200000                            		align		$200000				 ;	Aligns to proper location
00200000                            											
00200000                            CustomGameMode:				             ;	
00200000 4EB9 0000 0000             		jsr	SHC				             ;	Play SHC screen
00200006 33FC 0000 00FF EA00        		move.w	#0,	$FFEA00				 ;	Move 0 to game mode RAM (i moved the level mode here)
0020000E 4EF9 0000 789E             		jmp	$789E				           ;	Jump to level code
00200014                            											
00200014                            SHC:	incbin	"SHC_Advanced.bin"          ;	SHC screen include
00205AFE                            
00205AFE                            		align		$210000        
00210000                            
00210000 =00163716                  ChunkPointers	=	$163716
00210000 =00004C3E                  stardecompress	=	$4C3E
00210000 =000049A8                  nemdec			=	$49A8
00210000                            
00210000                            sub_87EA:				               ; CODE XREF: sub_7B32+492↑p
00210000 1039 00FF E500             				move.b  $FFE500,d0		;	level display?
00210006 4EB9 0001 3A68             				jsr     $13A68
0021000C 1039 00FF E500             				move.b  $FFE500,d0		;	level art
00210012 4EB9 0001 3B06             				jsr     $13B06
00210018 1039 00FF E500             				move.b  $FFE500,d0		;	level palette
0021001E 4EB9 0001 3D0E             				jsr     $13D0E
00210024 43F9 0016 3716             				lea     (ChunkPointers).l,a1
0021002A 7000                       				moveq   #0,d0
0021002C 1039 00FF E500             				move.b  $FFE500,d0
00210032 D040                       				add.w   d0,d0
00210034 D040                       				add.w   d0,d0
00210036 2071 0000                  				movea.l (a1,d0.w),a0
0021003A 49F9 00FF 0000             				lea     $FF0000.l,a4
00210040 4EB9 0000 49A8             				jsr     (nemdec).l
00210046 43F9 0018 8492             				lea     ($188492).l,a1
0021004C 7000                       				moveq   #0,d0
0021004E 1039 00FF E500             				move.b  $FFE500,d0
00210054 D040                       				add.w   d0,d0
00210056 D040                       				add.w   d0,d0
00210058 2271 0000                  				movea.l (a1,d0.w),a1
0021005C 45F9 00FF A400             				lea     $FFA400,a2
00210062 4EB9 0001 3DB6             				jsr     $13DB6
00210068 4EB9 0001 3A0E             				jsr     $13A0E
0021006E 4EF9 0001 3A2E             				jmp     $13A2E
00210074                            ; End of function sub_87EA
00210074                            
00210074                            
00210074                            ; =============== S U B R O U T I N E =======================================
00210074                            
00210074                            
00210074                            sub_8852:				               ; CODE XREF: sub_7B32+104↑p
00210074 1039 00FF E500             				move.b  $FFE500,d0
0021007A 4EB9 0001 3A98             				jsr     $13A98
00210080 1039 00FF E500             				move.b  $FFE500,d0
00210086 4EB9 0001 3CC4             				jsr     $13CC4
0021008C 1039 00FF E500             				move.b  $FFE500,d0
00210092                            
00210092 43F9 0018 53B0             				lea     ($1853B0).l,a1
00210098                            loc_886A:				               ; CODE XREF: sub_EEA6+CC↓p
00210098 7000                       				moveq   #0,d0
0021009A 1039 00FF E500             				move.b  $FFE500,d0
002100A0 D040                       				add.w   d0,d0
002100A2 D040                       				add.w   d0,d0
002100A4 2071 0000                  				movea.l (a1,d0.w),a0
002100A8 43F9 00FF 4000             				lea     ($FF4000).l,a1
002100AE 4EB9 0000 4C3E             				jsr     (stardecompress).l
002100B4 41F9 00FF 4000             				lea     ($FF4000).l,a0
002100BA 43F9 00FF AA00             				lea     ($FFAA00).l,a1
002100C0 3E3C 00FF                  				move.w  #$FF,d7
002100C4                            
002100C4                            loc_889A:				               ; CODE XREF: sub_8852+4A↓j
002100C4 22D8                       				move.l  (a0)+,(a1)+
002100C6 51CF FFFC                  				dbf     d7,loc_889A
002100CA 43F9 0018 8552             				lea     ($188552).l,a1
002100D0 7000                       				moveq   #0,d0
002100D2 1039 00FF E500             				move.b  $FFE500,d0
002100D8 D040                       				add.w   d0,d0
002100DA D040                       				add.w   d0,d0
002100DC 2271 0000                  				movea.l (a1,d0.w),a1
002100E0 45F9 00FF A600             				lea     $FFA600,a2
002100E6 4EB9 0001 3DB6             				jsr     $13DB6
002100EC 4E75                       				rts
002100EE                            				
002100EE                            		align		$212000  
00212000                            		
00212000 =0011C764                  BlockPointers	=	$11C764
00212000                            
00212000                            sub_13A68:				              ; CODE XREF: sub_87EA+4↑p
00212000 4E75                       				rts
00212002 7000                       				moveq   #0,d0
00212004 1039 00FF E500             				move.b  $FFE500,d0
0021200A 41F9 0011 C764             				lea     (BlockPointers).l,a0
00212010 D040                       				add.w   d0,d0
00212012 D040                       				add.w   d0,d0
00212014 D040                       				add.w   d0,d0
00212016 3E30 0004                  				move.w  4(a0,d0.w),d7
0021201A 2070 0000                  				movea.l (a0,d0.w),a0
0021201E 43F9 00FF 8008             				lea     $FF8008,a1
00212024 4A39 00FF E501             				tst.b   $FFE501
0021202A 6600                       				bne.s   loc_13A90
0021202C 43F9 00FF 8000             				lea     $FF8000,a1
00212032                            
00212032                            loc_13A90:				              ; CODE XREF: sub_13A68+22↑j
00212032 303C 0120                  				move.w  #$120,d0
00212036                            			;	bra.w   loc_13F9C
00212036                            loc_13F9C:				              ; CODE XREF: sub_13A68+2C↑j
00212036                            								        ; sub_13A98+3E↑j
00212036 48E7 81C0                  				movem.l d0/d7-a1,-(sp)
0021203A 4EB9 0000 4C3E             				jsr     (stardecompress).l
00212040 4CDF 0381                  				movem.l (sp)+,d0/d7-a1
00212044                            
00212044                            loc_13FAA:				              ; CODE XREF: sub_13A68+548↓j
00212044 3211                       				move.w  (a1),d1
00212046 D240                       				add.w   d0,d1
00212048 32C1                       				move.w  d1,(a1)+
0021204A 51CF FFF8                  				dbf     d7,loc_13FAA
0021204E 4E75                       				rts
00212050                            				
00212050                            		align		$220000  
00220000                            		
00220000                            		incbin	"SonLVL/chunks.nem"
